SET @old_innodb_file_per_table = @@GLOBAL.innodb_file_per_table;
SET GLOBAL innodb_file_per_table = ON;
#
# Expose I/O operations counters per tablespace
#
CREATE TABLE t1 (a INT PRIMARY KEY AUTO_INCREMENT, b VARCHAR(512)) ENGINE=InnoDB;
CREATE TABLE t2 LIKE t1;
INSERT INTO t1 VALUES (0, REPEAT('b', 512));
INSERT INTO t1 SELECT 0, b FROM t1;
INSERT INTO t2 SELECT 0, b FROM t1;
# Wait for I/O to be started (dirty pages to be flushed).
# Display statistics.
SELECT WRITE_REQS, WRITE_BYTES FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
WHERE SPACE_NAME LIKE '%test/t%';
WRITE_REQS	4
WRITE_BYTES	65536
WRITE_REQS	4
WRITE_BYTES	65536
# Display tablespace names.
SELECT SUBSTRING(SPACE_NAME, -11) AS `SPACE_NAME` FROM
INFORMATION_SCHEMA.INNODB_SPACE_STATS WHERE SPACE_NAME LIKE '%test/t%'
  ORDER BY SPACE;
SPACE_NAME	test/t1.ibd
SPACE_NAME	test/t2.ibd
# Copy and discard tablespace so that the tablespace is completely flushed.
ALTER TABLE t1 DISCARD TABLESPACE;
# Check that tablespace has been removed from memory.
SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
WHERE SPACE_NAME LIKE '%test/t%';
COUNT(*)	1
# Copy and import tablespace.
ALTER TABLE t1 IMPORT TABLESPACE;
# Read from the imported table.
SELECT COUNT(*) FROM t1;
COUNT(*)	2
# Check that the read counters have been incremented.
SELECT READ_REQS, READ_BYTES FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
WHERE SPACE_NAME LIKE '%test/t1%';
READ_REQS	2
READ_BYTES	32768
# Check that statistics are not lost on rename.
RENAME TABLE t1 TO t3;
SELECT READ_REQS, READ_BYTES FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
WHERE SPACE_NAME LIKE '%test/t3%';
READ_REQS	2
READ_BYTES	32768
# Trigger a write operation to the tablespace.
INSERT INTO t3 VALUES (0, REPEAT('b', 512));
# Wait for tablespace to be flushed.
# Drop tables from the cache.
DROP TABLE t2, t3;
# Dropped tables are removed from the cache.
SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
WHERE SPACE_NAME LIKE '%test/t%';
COUNT(*)	0
SET GLOBAL innodb_file_per_table = @old_innodb_file_per_table;
